version: '3.8'

services:
  # Main application with dashboard
  app:
    build: .
    container_name: delphi-app
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./logs:/app/logs
      - ./status:/app/status
    ports:
      - "8080:8080"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/credentials.json
      - PYTHONPATH=/app
    command: dashboard
    restart: unless-stopped

  # Data import service (run on-demand)
  import:
    build: .
    container_name: delphi-import
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./logs:/app/logs
      - ./status:/app/status
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/credentials.json
      - PYTHONPATH=/app
    command: import
    profiles:
      - import

  # Scheduler for automated imports
  scheduler:
    image: mcuadros/ofelia:latest
    container_name: delphi-scheduler
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/scheduler.ini:/etc/ofelia/config.ini
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - scheduler

  # BigQuery emulator for local development
  bigquery-emulator:
    image: ghcr.io/goccy/bigquery-emulator:latest
    container_name: delphi-bigquery-emulator
    ports:
      - "9050:9050"
    environment:
      - BIGQUERY_PROJECT_ID=delphi-local
      - BIGQUERY_DATASET_ID=trading_insights
    volumes:
      - bigquery-data:/var/lib/bigquery-emulator
    profiles:
      - dev

  # InfluxDB for time series data (alternative to BigQuery)
  influxdb:
    image: influxdb:2.7
    container_name: delphi-influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=delphi
      - DOCKER_INFLUXDB_INIT_BUCKET=market_data
      - DOCKER_INFLUXDB_INIT_RETENTION=30d
    restart: unless-stopped
    profiles:
      - influxdb

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: delphi-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=adminpassword
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
    depends_on:
      - influxdb
    restart: unless-stopped
    profiles:
      - grafana

volumes:
  data:
  logs:
  status:
  config:
  influxdb-data:
  grafana-data:
  bigquery-data:
